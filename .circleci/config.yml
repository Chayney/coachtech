version: 2.1

jobs:
  build:
    docker:
      - image: php:7.4.9-fpm
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Docker CLI
          command: |
            apt-get update
            apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common
            curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
            add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
            apt-get update
            apt-get install -y docker-ce docker-ce-cli containerd.io
      - run:
          name: Debug directory structure
          command: |
            echo "Initial directory structure:"
            ls -al ~
            ls -al ~/project
      - run:
          name: Build the application using Dockerfile.production
          command: |
            docker build -f docker/php/Dockerfile.production -t my-app /home/circleci/project
      - run:
          name: Debug composer.json existence
          command: |
            docker run --rm -v /home/circleci/project:/var/www/html my-app ls -al /var/www/html/project/src
      - run:
          name: Install Composer dependencies
          command: |
            docker run --rm -v /home/circleci/project:/var/www/html my-app composer install --no-dev --optimize-autoloader --no-interaction --working-dir=/var/www/html/project/src
      - run:
          name: Run PHPUnit tests
          command: |
            docker run --rm -v $(pwd):/var/www/html my-app php artisan test

  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Authenticate Docker to Google Cloud Registry
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project $GOOGLE_PROJECT_ID
            gcloud auth configure-docker
      - run:
          name: Build Docker image for deployment
          command: |
            docker build -f docker/php/Dockerfile.production -t gcr.io/$GOOGLE_PROJECT_ID/coachtech:$CIRCLE_SHA1 .
      - run:
          name: Push Docker image to Google Cloud Container Registry
          command: |
            docker push gcr.io/$GOOGLE_PROJECT_ID/coachtech:$CIRCLE_SHA1
      - run:
          name: Deploy to Google Cloud Run
          command: |
            gcloud run deploy coachtech \
              --image gcr.io/$GOOGLE_PROJECT_ID/coachtech:$CIRCLE_SHA1 \
              --region us-central1 \
              --platform managed \
              --quiet
      - run:
          name: Set APP_URL in .env.production
          command: |
            # Cloud RunのサービスURLを取得
            SERVICE_URL=$(gcloud run services describe coachtech --region us-central1 --platform managed --format 'value(status.url)')
            
            # APP_URLを.env.productionに設定
            echo "APP_URL=$SERVICE_URL" >> .env.production
      - run:
          name: Deploy updated .env.production to Cloud Run
          command: |
            gcloud run services update coachtech \
              --update-env-vars APP_URL=$SERVICE_URL \
              --region us-central1 \
              --platform managed
          
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build