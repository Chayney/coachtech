version: 2.1

jobs:
  build:
    docker:
      - image: php:7.4.9-fpm
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Docker CLI
          command: |
            apt-get update
            apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common
            curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
            add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
            apt-get update
            apt-get install -y docker-ce docker-ce-cli containerd.io
            curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
            docker-compose --version
      - run:
          name: Debug directory structure
          command: |
            echo "Current directory structure:"
            ls -al
            ls -al src
      - run:
          name: Build Docker images
          command: |
            docker-compose -f docker-compose.production.yml build
      - run:
          name: Push Docker images to Artifact Registry
          command: |
            docker-compose -f docker-compose.production.yml push

  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Authenticate Docker to Google Cloud Registry
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud config set project $GOOGLE_PROJECT_ID

            # Assign Artifact Registry Admin Role to Service Account
            gcloud projects add-iam-policy-binding $GOOGLE_PROJECT_ID \
              --member="serviceAccount:coachtech-project@laravel-project-444111.iam.gserviceaccount.com" \
              --role="roles/artifactregistry.admin"

            # Create Artifact Registry Repository
            if ! gcloud artifacts repositories describe coachtech --location=asia-northeast1 > /dev/null 2>&1; then
              gcloud artifacts repositories create coachtech \
                --repository-format=docker \
                --location=asia-northeast1 \
                --description="Docker repository"
            else
              echo "Artifact Registry 'my-repo' already exists."
            fi
            gcloud auth configure-docker asia-northeast1-docker.pkg.dev
      - run:
          name: Show gcloud auth list (debug)
          command: |
            echo "gcloud auth list (debug)"
            gcloud auth list
      - run:
          name: Assign IAM Roles to Service Account
          command: |
            # Grant Cloud Run roles
            gcloud projects add-iam-policy-binding $GOOGLE_PROJECT_ID \
              --member="serviceAccount:coachtech-project@laravel-project-444111.iam.gserviceaccount.com" \
              --role="roles/run.admin"
            
            # Grant Service Account User role
            gcloud projects add-iam-policy-binding $GOOGLE_PROJECT_ID \
              --member="serviceAccount:coachtech-project@laravel-project-444111.iam.gserviceaccount.com" \
              --role="roles/iam.serviceAccountUser"

            # Grant Editor role
            gcloud projects add-iam-policy-binding $GOOGLE_PROJECT_ID \
              --member="serviceAccount:coachtech-project@laravel-project-444111.iam.gserviceaccount.com" \
              --role="roles/editor"
      - run:
          name: Deploy to Google Cloud Run
          command: |
            gcloud run deploy coachtech --image asia-northeast1-docker.pkg.dev/$GOOGLE_PROJECT_ID/coachtech/coachtech:latest --platform managed --region asia-northeast1 --project=$GOOGLE_PROJECT_ID --allow-unauthenticated
      - run:
          name: Set APP_URL in .env.production
          command: |
            # Cloud RunのサービスURLを取得
            SERVICE_URL=$(gcloud run services describe coachtech --region asia-northeast1 --platform managed --format 'value(status.url)')
            
            # APP_URLを.env.productionに設定
            echo "APP_URL=$SERVICE_URL" >> .env.production
      - run:
          name: Set mail environment variables in .env.production
          command: |
            echo "MAIL_MAILER=smtp" >> .env.production
            echo "MAIL_HOST=smtp.gmail.com" >> .env.production
            echo "MAIL_PORT=587" >> .env.production
            echo "MAIL_USERNAME=$MAIL_USERNAME" >> .env.production
            echo "MAIL_PASSWORD=$MAIL_PASSWORD" >> .env.production
            echo "MAIL_ENCRYPTION=tls" >> .env.production
            echo "MAIL_FROM_ADDRESS=from@example.com" >> .env.production
            echo 'MAIL_FROM_NAME="${APP_NAME}"' >> .env.production
      - run:
          name: Deploy updated .env.production to Cloud Run
          command: |
            gcloud run services update coachtech \
              --update-env-vars APP_URL=$SERVICE_URL \
              --region asia-northeast1 \
              --platform managed
      - run:
          name: Grant Artifact Registry roles
          command: |
            gcloud artifacts repositories add-iam-policy-binding coachtech \
              --location=asia-northeast1 \
              --member="serviceAccount:coachtech-project@laravel-project-444111.iam.gserviceaccount.com" \
              --role="roles/artifactregistry.writer"
      - run:
          name: Grant allUsers role to Cloud Run service
          command: |
            gcloud run services add-iam-policy-binding coachtech \
              --member="allUsers" \
              --role="roles/run.invoker" \
              --region=asia-northeast1 \
              --platform managed
              
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build