version: 2.1

jobs:
  build:
    docker:
      - image: php:7.4.9-fpm
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install Docker CLI
          command: |
            apt-get update
            apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common
            curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
            add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
            apt-get update
            apt-get install -y docker-ce docker-ce-cli containerd.io
      - run:
          name: Debug directory structure
          command: |
            echo "Current directory structure:"
            ls -al
            ls -al src
      - run:
          name: Build the application using Dockerfile.production
          command: |
            docker build -f docker/php/Dockerfile.production -t my-app .
      - run:
          name: Push the application image to Google Cloud Container Registry
          command: |
            gcloud auth configure-docker
            docker push gcr.io/$GOOGLE_PROJECT_ID/my-app
      - run:
          name: Run PHPUnit tests
          command: |
            docker run --rm -v $CIRCLE_WORKING_DIRECTORY:/var/www/html my-app php /var/www/html --working-dir=/var/www/html

  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Authenticate Docker to Google Cloud Registry
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project $GOOGLE_PROJECT_ID
            gcloud auth configure-docker
      - run:
          name: Build Docker image for deployment
          command: |
            docker build -t gcr.io/$GOOGLE_PROJECT_ID/coachtech:$CIRCLE_SHA1 -f docker/php/Dockerfile.production .
      - run:
          name: Push Docker image to Google Cloud Container Registry
          command: |
            docker push gcr.io/$GOOGLE_PROJECT_ID/coachtech:$CIRCLE_SHA1
      - run:
          name: Deploy to Google Cloud Run
          command: |
            gcloud run deploy coachtech \
              --image gcr.io/$GOOGLE_PROJECT_ID/coachtech:$CIRCLE_SHA1 \
              --region us-central1 \
              --platform managed \
              --service-account laravel-project@notional-portal-439111-s2.iam.gserviceaccount.com \
              --timeout 300s \
              --quiet
      - run:
          name: Set APP_URL in .env.production
          command: |
            # Cloud RunのサービスURLを取得
            SERVICE_URL=$(gcloud run services describe coachtech --region us-central1 --platform managed --format 'value(status.url)')
            
            # APP_URLを.env.productionに設定
            echo "APP_URL=$SERVICE_URL" >> .env.production
      - run:
          name: Generate Laravel APP_KEY
          command: |
            | docker run --rm -v $CIRCLE_WORKING_DIRECTORY:/var/www/html gcr.io/$GOOGLE_PROJECT_ID/my-app php /var/www/html/artisan key:generate --env=production
      - run:
          name: Set mail environment variables in .env.production
          command: |
            echo "MAIL_MAILER=smtp" >> .env.production
            echo "MAIL_HOST=smtp.gmail.com" >> .env.production
            echo "MAIL_PORT=587" >> .env.production
            echo "MAIL_USERNAME=$MAIL_USERNAME" >> .env.production
            echo "MAIL_PASSWORD=$MAIL_PASSWORD" >> .env.production
            echo "MAIL_ENCRYPTION=tls" >> .env.production
            echo "MAIL_FROM_ADDRESS=from@example.com" >> .env.production
            echo 'MAIL_FROM_NAME="${APP_NAME}"' >> .env.production
      - run:
          name: Deploy updated .env.production to Cloud Run
          command: |
            gcloud run services update coachtech \
              --update-env-vars APP_URL=$SERVICE_URL \
              --region us-central1 \
              --platform managed
      - run:
          name: Grant allUsers role to Cloud Run service
          command: |
            gcloud run services add-iam-policy-binding coachtech \
              --member="allUsers" \
              --role="roles/run.invoker" \
              --region=us-central1 \
              --platform managed
      - run:
          name: Grant Cloud Run Invoker role to service account
          command: |
            gcloud projects add-iam-policy-binding $GOOGLE_PROJECT_ID \
              --member="serviceAccount:laravel-project@notional-portal-439111-s2.iam.gserviceaccount.com" \
              --role="roles/run.invoker" \
              --region=us-central1 \
              --platform managed
          
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build