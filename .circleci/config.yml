version: 2.1

executors:
  docker-executor:
    docker:
      - image: 'google/cloud-sdk:slim'  # Cloud SDKを使用する
      - image: 'php:7.4.9-fpm'  # PHPをインストールしたDockerイメージ
    working_directory: ~/repo

jobs:
  # Build job: ビルド・プッシュ
  build:
    executor: docker-executor
    steps:
      - checkout  # リポジトリをクローンする

      # PHPUnitのインストール
      - run:
          name: Install dependencies and PHPUnit
          command: |
            curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer  # Composerインストール
            composer install --no-dev --prefer-dist --no-scripts  # 本番用依存関係のインストール
            curl -sS https://phar.phpunit.de/phpunit.phar -o /usr/local/bin/phpunit  # PHPUnitのインストール
            chmod +x /usr/local/bin/phpunit  # 実行権限を付与

      # PHPUnitを使ったテストの実行
      - run:
          name: Run PHPUnit tests
          command: |
            phpunit --configuration src/phpunit.xml  # srcディレクトリ内のphpunit.xmlを指定してテストを実行

      - run:
          name: Set up Docker credentials for Google Cloud
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud config set project $GOOGLE_PROJECT_ID
            gcloud auth configure-docker asia-northeast1-docker.pkg.dev  # Artifact RegistryへのDocker認証

      - run:
          name: Build the Docker image
          command: |
            docker build -t asia-northeast1-docker.pkg.dev/$GOOGLE_PROJECT_ID/coachtech/coachtech:latest .

      - run:
          name: Push the Docker image to Artifact Registry
          command: |
            docker push asia-northeast1-docker.pkg.dev/$GOOGLE_PROJECT_ID/coachtech/coachtech:latest

  # Deploy job: Cloud Runへのデプロイ
  deploy:
    executor: docker-executor
    steps:
      - checkout  # リポジトリをクローンする
      - run:
          name: Set up Docker credentials for Google Cloud
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 --decode > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud config set project $GOOGLE_PROJECT_ID
      - run:
          name: Deploy to Google Cloud Run
          command: |
            gcloud run deploy coachtech \
              --image asia-northeast1-docker.pkg.dev/$GOOGLE_PROJECT_ID/coachtech/coachtech:latest \
              --platform managed \
              --region asia-northeast1 \
              --allow-unauthenticated \
              --project=$GOOGLE_PROJECT_ID
      - run:
          name: Set APP_URL in .env.production
          command: |
            # Cloud RunのサービスURLを取得
            SERVICE_URL=$(gcloud run services describe coachtech --region asia-northeast1 --platform managed --format 'value(status.url)')
            
            # .env.productionにAPP_URLを設定
            echo "APP_URL=$SERVICE_URL" >> .env.production
      - run:
          name: Set mail environment variables in .env.production
          command: |
            echo "MAIL_MAILER=smtp" >> .env.production
            echo "MAIL_HOST=smtp.gmail.com" >> .env.production
            echo "MAIL_PORT=587" >> .env.production
            echo "MAIL_USERNAME=$MAIL_USERNAME" >> .env.production
            echo "MAIL_PASSWORD=$MAIL_PASSWORD" >> .env.production
            echo "MAIL_ENCRYPTION=tls" >> .env.production
            echo "MAIL_FROM_ADDRESS=from@example.com" >> .env.production
            echo 'MAIL_FROM_NAME="${APP_NAME}"' >> .env.production
      - run:
          name: Deploy updated .env.production to Cloud Run
          command: |
            gcloud run services update coachtech \
              --update-env-vars APP_URL=$SERVICE_URL \
              --region asia-northeast1 \
              --platform managed

  # Grant Artifact Registry roles
  grant-artifact-registry-permission:
    executor: docker-executor
    steps:
      - run:
          name: Grant Artifact Registry roles
          command: |
            gcloud artifacts repositories add-iam-policy-binding coachtech \
              --location=asia-northeast1 \
              --member="serviceAccount:coachtech-project@laravel-project-444111.iam.gserviceaccount.com" \
              --role="roles/artifactregistry.writer"

  # Grant Cloud Run roles
  grant-cloud-run-permission:
    executor: docker-executor
    steps:
      - run:
          name: Grant Cloud Run roles
          command: |
            gcloud projects add-iam-policy-binding $GOOGLE_PROJECT_ID \
              --member="serviceAccount:coachtech-project@laravel-project-444111.iam.gserviceaccount.com" \
              --role="roles/run.admin"
            gcloud projects add-iam-policy-binding $GOOGLE_PROJECT_ID \
              --member="serviceAccount:coachtech-project@laravel-project-444111.iam.gserviceaccount.com" \
              --role="roles/iam.serviceAccountUser"
            gcloud projects add-iam-policy-binding $GOOGLE_PROJECT_ID \
              --member="serviceAccount:coachtech-project@laravel-project-444111.iam.gserviceaccount.com" \
              --role="roles/editor"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - grant-artifact-registry-permission:
          requires:
            - build
      - grant-cloud-run-permission:
          requires:
            - build
      - deploy:
          requires:
            - build
            - grant-artifact-registry-permission
            - grant-cloud-run-permission